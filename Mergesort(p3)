#include<stdio.h>

void merge(int arr[], int low, int mid, int high) {
    int temp[high - low + 1]; 
    int left = low, right = mid + 1, k = 0;
    while (left <= mid && right <= high) {
        if (arr[left] <= arr[right]) {
            temp[k++] = arr[left++];
        } else {
            temp[k++] = arr[right++];
        }
    }
    while (left <= mid) {
        temp[k++] = arr[left++];
    }
    while (right <= high) {
        temp[k++] = arr[right++];
    }
    int i;
    for ( i = 0; i < k; i++) {
        arr[low + i] = temp[i];
    }
}

void mS(int arr[], int low, int high) {
    if (low < high) {
        int mid = (low + high) / 2;
        mS(arr, low, mid);
        mS(arr, mid + 1, high);
        merge(arr, low, mid, high);
    }
}

void mergesort(int arr[], int n) {
    mS(arr, 0, n - 1);
}

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    mergesort(arr, n);

    printf("Sorted array: \n");
    int i;
    for ( i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
