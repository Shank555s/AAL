#include <stdio.h>
#include <limits.h>

#define MAX 20 

int dp[1 << MAX][MAX]; 

int totalCost(int mask, int pos, int n, int cost[MAX][MAX]) {
    if (mask == (1 << n) - 1) {
        return cost[pos][0];
    }

    if (dp[mask][pos] != -1) {
        return dp[mask][pos];
    }

    int ans = INT_MAX;

    for (int city = 0; city < n; city++) {
        if ((mask & (1 << city)) == 0) { 
            int newAns = cost[pos][city] + totalCost(mask | (1 << city), city, n, cost);
            ans = (newAns < ans) ? newAns : ans;
        }
    }

    return dp[mask][pos] = ans;
}

int tsp(int cost[MAX][MAX], int n) {
    for (int i = 0; i < (1 << n); i++) {
        for (int j = 0; j < n; j++) {
            dp[i][j] = -1;
        }
    }

    return totalCost(1, 0, n, cost);
}

int main() {
    int cost[MAX][MAX] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };

    int n = 4;

    int result = tsp(cost, n);

    printf("The minimum cost to visit all cities is: %d\n", result);

    return 0;
}
